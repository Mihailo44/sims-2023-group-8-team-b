@startuml

Actor User as U
Participant WPF as W
Participant TourCreationViewModel as TCVM
Participant NotificationDisplayViewModel as NDVM
Participant TouristNotificationService as TNS
Participant TouristNotificationRepository as TNR
Participant Location as L
participant PhotoService as PS
participant PhotoRepository as PR
participant TourService as TS
participant TourRepository as TR
participant TourCheckpointService as TCS
participant TourCheckpointRepository as TCR
participant TourRequestService as TRS
participant TourRequestRepository as TRR
participant LocationService as LS
participant LocationRepository as LR

U -> W: Creates tour
W -> TCVM: NewTour
TCVM -> TCVM ++: CreateTourExecute()

opt SelectedCheckpoints.Count < 2
    TCVM-->W: errorMessage
end

loop multipleDateTimes:
   TCVM->TCVM ++:PrepareLocations()

   TCVM->LS ++:FindLocationId(NewLocation)

   LS->LR ++: GetAll()
   LR-->LS --: locations

   LS-->TCVM --: location
      opt locationID == -1
         TCVM->LS ++: Create(NewLocation)
         LS->LR ++: Create(NewLocation)
         LR-->LS --: location
         LS-->TCVM --: location
      end
return

TCVM->TCVM ++: HandleTourRequest(dateTime)
   opt tourRequest != null
      TCVM->TRS ++: Update(tourRequest, tourRequest.ID)
      TRS->TRR ++: Update(tourRequest, tourRequest.ID)
      TRR --> TRS --: tourRequest
      TRS --> TCVM --: tourRequest
   end
   return canBeHandled

   alt NewTour.IsValid:
      TCVM->TCVM ++: AddPhotos()
      TCVM->TS++: GenerateId()
      TS->TR++: GenerateId()
      TR->TS--: ID
      TS->TCVM--: ID

      loop photoLinks
         TCVM->PS ++: Create(photo)
         PS->PR ++: Create(photo)
         PR-->PS --: photo
         PS-->TCVM --: photo
      end
      return

      TCVM->TCVM ++: LoadCheckpointsToTours()
      TCVM->TS++: GenerateId()
      TS->TR++: GenerateId()
      TR->TS--: ID
      TS->TCVM--: ID
      loop checkpoints
         TCVM->TCS ++: Create(TourCheckpoint)
         TCS->TCR ++: Create(TourCheckpoint)
         TCR-->TCS --: tourCheckpoint
         TCS-->TCVM --: tourCheckpoint
      end

      TCVM->TS ++: Create(NewTour)
      TS->TR ++: Create(NewTour)
      TR-->TS --: newTour
      TS-->TCVM --: newTour
      opt canHandleTourRequest:
         TCVM -> TNS ++: Create(notification)
         TNS -> TNR ++: Create(notification)
         TNR --> TNS --: notification
         TNS --> TCVM --: notification
         TCVM -> TNS --++: NotifyAboutNewTour(newTour, tourRequests)

         loop tourRequests:
            TNS -> L ++: Equals(newTour.ShortLocation)
            alt newLocation.City == city && newLocation.Country == country:
               L --> TNS: true
            else
               L --> TNS --: false
            end
            
            opt equalByLocation:
               TNS -> TNS ++: IsNotified(request.TouristID, message)
               TNS -> TNR ++: GetAll()
               TNR --> TNS --: notifications
               TNS -> TNS --: notifiedStatus

               opt !notifiedStatus:
                  TNS -> TNR ++: Create(notification)
                  TNR --> TNS --: notification
               end
            end

            opt equalByLanguage:
               TNS -> TNS ++: IsNotified(request.TouristID, message)
               TNS -> TNR ++: GetAll()
               TNR --> TNS --: notifications
               TNS -> TNS --: notifiedStatus

               opt !notifiedStatus:
                  TNS -> TNR ++: Create(notification)
                  TNR --> TNS --: notification
               end
            end
         end
      end
   end
end
TNS --> TCVM --
TCVM --> W --

U -> W ++: See notification
W -> NDVM ++
NDVM -> TNS ++: GetAll()
TNS -> TNR ++: GetAll()
TNR --> TNS --: notifications
TNS --> NDVM --: notifications
NDVM --> W --

U -> W: Select new tour notification

W -> NDVM: SelectedNotification
NDVM -> NDVM ++: NotifyExecute()
alt SelectedNotification.Type == SUGGESTED_TOUR:
   NDVM --> W: TourDisplay(loggedInTourist, SelectedNotification.Tour)
else SelectedNotification.Type == TOUR_REQUEST_ACCEPTED:
   NDVM --> W --: TourDisplay(loggedInTourist, SelectedNotification.Tour)
end

W --> U --

@enduml